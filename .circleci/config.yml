version: 2

# https://github.com/kinvolk/habitat-operator/blob/master/.circleci/config.yml

jobs:
  build:
    machine: true
    environment:
      CHANGE_MINIKUBE_NONE_USER: true
      MINIKUBE_VERSION: v0.28.2
      K8S_VERSION: v1.10.0
    steps:
      - checkout
      - run:
          name: Check for changes in documentation and examples
          command: ./scripts/check-skippable-changes.sh
      - run:
          name: Setup kubectl, minikube, and start it
          command: |
            echo "Using kubectl version ${K8S_VERSION}, minicube version ${MINIKUBE_VERSION}"
            # install kubectl
            curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/kubectl \
              && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
            # install minikube
            curl -Lo minikube https://github.com/kubernetes/minikube/releases/download/${MINIKUBE_VERSION}/minikube-linux-amd64 \
              && chmod +x minikube && sudo mv minikube /usr/local/bin/
            # start minikube
            sudo minikube config set WantReportErrorPrompt false
            # TODO: remove the --bootstrapper flag once this issue is solved: https://github.com/kubernetes/minikube/issues/2704
            sudo -E minikube start --vm-driver=none --bootstrapper=localkube --kubernetes-version=${K8S_VERSION} --extra-config=apiserver.Authorization.Mode=RBAC
      - run:
          name: Wait for kubernetes to be ready
          command: |
            JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'
            until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do
              sleep 1
            done
      - run:
          name: e2e tests
          command: |
            ./scripts/integration-tests minikube
      # - run:
      #     name: e2e tests
      #     command: |
      #       $(eval IP := $(shell kubectl config view --output=jsonpath='{.clusters[0].cluster.server}' --minify | grep --only-matching '[0-9.]\+' | head --lines 1))
      #       $(eval KUBECONFIG_PATH := $(shell mktemp --tmpdir operator-e2e.XXXXXXX))
      #       kubectl config view --minify --flatten > $(KUBECONFIG_PATH)
      #       @if test 'x$(TESTIMAGE)' = 'x'; then echo "TESTIMAGE must be passed."; exit 1; fi
      #       go test -v ./test/e2e/... --image "$(TESTIMAGE)" --kubeconfig $(KUBECONFIG_PATH) --ip "$(IP)"
      # - run:
      #     name: On fail, print logs
      #     command: kubectl logs -lhabitat-operator=true --tail=100
      #     when: on_fail
